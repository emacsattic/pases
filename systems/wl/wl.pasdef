;; -*- mode: emacs-lisp -*-
(pases:defsystem
 wl
 :version "1.14.6"
 :after '(semi)
 :components
 (list
  (pases:deffile "elmo/utf7")
  (pases:deffile "elmo/pldap")
  (pases:deffile "elmo/acap")
  (pases:deffile "elmo/slp")
  (pases:deffile "elmo/mmimap")
  (pases:deffile "elmo/elmo-signal")
  (pases:deffile "elmo/elmo-date")
  (pases:deffile "elmo/elmo-util")
  (pases:deffile "elmo/elmo-version")
  (pases:deffile "elmo/elmo-vars")
  (pases:deffile "elmo/elmo"
                 :generate-autoloads-to "wl-loaddefs")
  (pases:deffile "elmo/elmo-msgdb")
  (pases:deffile "elmo/elmo-net")
  (pases:deffile "elmo/elmo-imap4")
  (pases:deffile "elmo/elmo-pop3")
  (pases:deffile "elmo/elmo-nntp")
  (pases:deffile "elmo/elmo-localdir")
  (pases:deffile "elmo/elmo-localnews")
  (pases:deffile "elmo/elmo-map")
  (pases:deffile "elmo/elmo-maildir")
  (pases:deffile "elmo/elmo-multi")
  (pases:deffile "elmo/elmo-access")
  (pases:deffile "elmo/elmo-filter")
  (pases:deffile "elmo/elmo-archive")
  (pases:deffile "elmo/elmo-pipe")
  (pases:deffile "elmo/elmo-cache")
  (pases:deffile "elmo/elmo-internal")
  (pases:deffile "elmo/elmo-flag")
  (pases:deffile "elmo/elmo-sendlog")
  (pases:deffile "elmo/elmo-null")
  (pases:deffile "elmo/elmo-dop")
  (pases:deffile "elmo/elmo-search")
  (pases:deffile "elmo/elmo-file")
  (pases:deffile "elmo/elmo-split"
                 :generate-autoloads-to "wl-loaddefs")
  (pases:deffile "elmo/elmo-spam")
  (pases:deffile "elmo/elsp-bogofilter")
  (pases:deffile "elmo/elsp-sa")
  (pases:deffile "elmo/elsp-bsfilter")
  (pases:deffile "elmo/elsp-spamoracle")
  (pases:deffile "elmo/modb")
  (pases:deffile "elmo/modb-entity")
  (pases:deffile "elmo/modb-legacy")
  (pases:deffile "elmo/modb-standard")
  (pases:deffile "elmo/elmo-database"
                 :only-if (featurep 'xemacs))
  (pases:deffile "elmo/elmo-shimbun"
                 :only-if (pases:module-installed-p 'shimbun))
  (pases:deffile "elmo/elsp-spamfilter"
                 :only-if (pases:module-installed-p 'spamfilter))
  (pases:deffile "elmo/elmo-mime")

  (pases:deffile "wl/wl"
                 :generate-autoloads-to "wl-loaddefs")
  (pases:deffile "wl/wl-folder")
  (pases:deffile "wl/wl-summary")
  (pases:deffile "wl/wl-action")
  (pases:deffile "wl/wl-message")
  (pases:deffile "wl/wl-vars")
  (pases:deffile "wl/wl-draft"
                 :generate-autoloads-to "wl-loaddefs")
  (pases:deffile "wl/wl-util")
  (pases:deffile "wl/wl-version")
  (pases:deffile "wl/wl-address")
  (pases:deffile "wl/wl-addrmgr"
                 :generate-autoloads-to "wl-loaddefs")
  (pases:deffile "wl/wl-highlight")
  (pases:deffile "wl/wl-demo")
  (pases:deffile "wl/wl-refile")
  (pases:deffile "wl/wl-thread")
  (pases:deffile "wl/wl-fldmgr")
  (pases:deffile "wl/wl-expire")
  (pases:deffile "wl/wl-template")
  (pases:deffile "wl/wl-score")
  (pases:deffile "wl/wl-acap")
  (pases:deffile "wl/wl-news")
  (pases:deffile "wl/wl-spam")
  (pases:deffile "wl/wl-batch")
  (pases:deffile "wl/wl-dnd"
                 :only-if (featurep 'xemacs))
  (pases:deffile "wl/wl-xmas"
                 :only-if (featurep 'xemacs))
  (pases:deffile "wl/wl-e21"
                 :only-if (and (not (featurep 'xemacs))
                               (and (boundp 'emacs-major-version) 
                                    (>= emacs-major-version 21))))
  (pases:deffile "wl/wl-mule"
                 :only-if (and (not (featurep 'xemacs))
                               (not (and (boundp 'emacs-major-version) 
                                         (>= emacs-major-version 21)))
                               (featurep 'mule)))
  (pases:deffile "wl/wl-mime")

  (pases:deffile "utils/rfc2368")
  (pases:deffile "utils/im-wl"
                 :generate-autoloads-to "wl-loaddefs")
  (pases:deffile "utils/wl-mailto")
  (pases:deffile "utils/wl-addrbook")
  (pases:deffile "utils/wl-complete")
  (pases:deffile "utils/ssl"
                 :only-if (pases:module-installed-p 'base64))
  (pases:deffile "utils/bbdb-wl"
                 :only-if (pases:module-installed-p 'bbdb)
                 :generate-autoloads-to "wl-loaddefs")
  (pases:deffile "wl-loaddefs" :load t :generated t))
 :after-load-hook
 (lambda ()
   (setq wl-icon-directory
         (expand-file-name "etc/wl/icons"
                           (pases:component-pathname-internal
                            pases:current-component)))))
